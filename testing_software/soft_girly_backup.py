# –ü—Ä–æ—Å—Ç–æ–π –æ–¥–Ω–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–∞ HTML + JS –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤ Python-—Å—Ä–µ–¥–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å Flask)
# –°–æ—Ö—Ä–∞–Ω–∏ —ç—Ç–æ—Ç —Ñ–∞–π–ª –∫–∞–∫ app.py –∏ –∑–∞–ø—É—Å—Ç–∏ –µ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π: python app.py

from flask import Flask, render_template_string

app = Flask(__name__)

html_code = '''
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>–¢–µ—Å—Ç–æ–≤–æ–µ SPA</title>
  <style>
    body {
      font-family: "Comic Sans MS", cursive, sans-serif;
      background-color: #fff0f6;
      padding: 2rem;
      max-width: 800px;
      margin: auto;
      color: #880e4f;
    }
    h1 {
      text-align: center;
      color: #ad1457;
    }
    .card {
      background-color: #ffe4ec;
      border: 2px solid #f8bbd0;
      border-radius: 15px;
      padding: 1.5rem;
      margin-bottom: 1.5rem;
      box-shadow: 0 4px 8px rgba(255, 105, 180, 0.2);
    }
    button {
      background-color: #f06292;
      color: white;
      padding: 0.5rem 1rem;
      border: none;
      border-radius: 10px;
      cursor: pointer;
      margin-top: 0.5rem;
      transition: background-color 0.3s;
    }
    button:hover {
      background-color: #ec407a;
    }
    input, select {
      padding: 0.5rem;
      border-radius: 10px;
      border: 1px solid #f48fb1;
      width: calc(100% - 1rem);
      margin-top: 0.25rem;
      background-color: #fff0f6;
    }
    label {
      display: block;
      margin-top: 0.75rem;
      font-weight: bold;
    }
    .hover-box {
      position: relative;
      display: inline-block;
      cursor: pointer;
      color: #c2185b;
      text-decoration: underline;
    }
    .hover-box .tooltip {
      display: none;
      position: absolute;
      background: #880e4f;
      color: white;
      padding: 0.5rem;
      border-radius: 10px;
      top: 1.5rem;
      left: 0;
      white-space: nowrap;
    }
    .hover-box:hover .tooltip {
      display: block;
    }
    .input-group {
      display: flex;
      gap: 0.5rem;
      align-items: flex-start;
      flex-wrap: wrap;
    }
    .error {
      margin-top: 0.5rem;
      font-weight: bold;
    }
  </style>
</head>
<body>
  <h1>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –¥–µ–≤–∏—á—å–µ SPA-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ üíñ</h1>

  <div class="card">
    <button onclick="document.getElementById('output').innerText='–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É!'">
      –ù–∞–∂–º–∏ –º–µ–Ω—è
    </button>
    <p id="output" style="color: #d81b60; font-weight: bold;"></p>
  </div>

  <div class="card">
    <label for="textInput">–ü–æ–ª–µ –¥–ª—è –ø—Ä–∏–∑–Ω–∞–Ω–∏–π üå∏:</label>
    <div class="input-group">
      <input type="text" id="textInput" placeholder="–í–≤–µ–¥–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ..." />
      <button type="button" onclick="displayInput()">–ü–æ–∫–∞–∑–∞—Ç—å</button>
    </div>
    <p id="error" class="error"></p>
  </div>

  <div class="card">
    <div class="hover-box">
      –ù–∞–≤–µ–¥–∏ –Ω–∞ –º–µ–Ω—è üå∑
      <div class="tooltip">–¢—ã —á—É–¥–æ, —á—Ç–æ –Ω–∞–≤–æ–¥–∏—à—å –º—ã—à–∫—É ü¶ã</div>
    </div>
  </div>

  <div class="card">
    <label><input type="checkbox" id="checkbox" onchange="showCheckboxState()" /> –ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è —ç—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ üíï</label>
    <p id="checkboxState"></p>

    <label for="colorSelect">–í—ã–±–µ—Ä–∏ –ª—é–±–∏–º—ã–π —Ü–≤–µ—Ç:</label>
    <select id="colorSelect" onchange="showSelectedColor()">
      <option value="">-- –≤—ã–±–µ—Ä–∏ --</option>
      <option value="pink">–†–æ–∑–æ–≤—ã–π</option>
      <option value="purple">–§–∏–æ–ª–µ—Ç–æ–≤—ã–π</option>
      <option value="sky">–ù–µ–±–µ—Å–Ω—ã–π</option>
    </select>
    <p id="colorChoice"></p>
  </div>

  <script>
    function displayInput() {
      const input = document.getElementById('textInput').value.trim();
      const error = document.getElementById('error');
      if (input === '') {
        error.textContent = '–ù–µ –æ—Å—Ç–∞–≤–ª—è–π –ø—É—Å—Ç—ã–º, –∫—Ä–∞—Å–æ—Ç–∫–∞ üíå';
        error.style.color = '#e91e63';
      } else {
        error.textContent = '–¢—ã –Ω–∞–ø–∏—Å–∞–ª–∞: ' + input;
        error.style.color = '#4caf50';
      }
    }

    function showCheckboxState() {
      const checkbox = document.getElementById('checkbox');
      const stateText = document.getElementById('checkboxState');
      if (checkbox.checked) {
        stateText.textContent = '–†–∞–¥–∞, —á—Ç–æ —Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è! üíï';
      } else {
        stateText.textContent = '–ú–æ–∂–µ—Ç, —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ª—É—á—à–µ? üò¢';
      }
    }

    function showSelectedColor() {
      const color = document.getElementById('colorSelect').value;
      const colorText = document.getElementById('colorChoice');
      if (color) {
        colorText.textContent = '–¢—ã –≤—ã–±—Ä–∞–ª–∞: ' + color + ' üíó';
      } else {
        colorText.textContent = '';
      }
    }
  </script>
</body>
</html>
'''

@app.route('/')
def index():
    return render_template_string(html_code)

if __name__ == '__main__':
    app.run(debug=True)